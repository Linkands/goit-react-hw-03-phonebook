{"version":3,"sources":["components/Phonebook/Phonebook.styles.jsx","components/Phonebook/Phonebook.jsx","components/Contacts/Contacts.styles.jsx","components/Contacts/Contacts.jsx","components/Filter/Filter.styles.jsx","components/Filter/Filter.jsx","App.jsx","index.js"],"names":["Wrapper","styled","div","Header","h2","InputName","p","SubmitButton","button","Phonebook","onSubmit","onChange","name","number","type","pattern","title","required","value","List","ul","Item","li","DeleteButton","Contacts","contactsData","onDeleteContact","map","contact","onClick","id","Filter","filter","autoComplete","App","state","contacts","handleChange","e","target","setState","handleSubmit","preventDefault","randomId","uuidv4","checkName","includes","checkNumber","alert","eraseInputs","console","log","removeContact","contactId","prevState","visibleContacts","normalizedFilter","toLowerCase","this","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1a9469a1.chunk.js","sourcesContent":["import styled from '@emotion/styled'\n\nexport const Wrapper = styled.div`\n  text-align: center;\n`\nexport const Header = styled.h2`\n  color: #4b3b40;\n`\nexport const InputName = styled.p`\n  color: #82735c;\n  margin: 0;\n`\nexport const SubmitButton = styled.button`\n  background-color: #9db17c;\n  color: white;\n  margin-top: 20px;\n  cursor: pointer;\n`\n","import React from 'react'\nimport { Header, SubmitButton, InputName, Wrapper } from './Phonebook.styles'\n\nfunction Phonebook({ onSubmit, onChange, name, number }) {\n  return (\n    <Wrapper>\n      <Header>Phonebook</Header>\n      <form onSubmit={onSubmit}>\n        <InputName>Name</InputName>\n        <input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          onChange={onChange}\n          value={name}\n        />\n        <InputName>Number</InputName>\n        <input\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n          onChange={onChange}\n          value={number}\n        />\n        <br />\n        <SubmitButton type=\"submit\">Add contact</SubmitButton>\n      </form>\n    </Wrapper>\n  )\n}\n\nexport default Phonebook\n","import styled from '@emotion/styled'\n\nexport const Wrapper = styled.div`\n  text-align: center;\n`\nexport const List = styled.ul`\n  color: #4b3b40;\n`\nexport const Item = styled.li`\n  color: #82735c;\n  list-style: none;\n`\nexport const DeleteButton = styled.button`\n  background-color: #9db17c;\n  color: white;\n  margin-left: 20px;\n  margin-top: 10px;\n  cursor: pointer;\n`\nexport const Header = styled.h2`\n  color: #4b3b40;\n`\n","import React from 'react'\nimport { Wrapper, List, Item, DeleteButton, Header } from './Contacts.styles'\n\nfunction Contacts({ contactsData, onDeleteContact }) {\n  return (\n    <Wrapper>\n      <Header>Contacts</Header>\n      <List>\n        {contactsData.map((contact) => (\n          <Item key={contact.id}>\n            {contact.name}: {contact.number}\n            <DeleteButton\n              type=\"button\"\n              onClick={() => onDeleteContact(contact.id)}\n            >\n              Delete contact\n            </DeleteButton>\n          </Item>\n        ))}\n      </List>\n    </Wrapper>\n  )\n}\n\nexport default Contacts\n","import styled from '@emotion/styled'\n\nexport const Wrapper = styled.div`\n  text-align: center;\n`\nexport const Header = styled.p`\n  color: #4b3b40;\n  margin-top: 10px;\n  margin-bottom: 0px;\n`\n","import React from 'react'\nimport { Header, Wrapper } from './Filter.styles'\n\nfunction Filter({ filter, onChange }) {\n  return (\n    <Wrapper>\n      <Header>Find contacts by name</Header>\n      <input\n        type=\"text\"\n        name=\"filter\"\n        onChange={onChange}\n        value={filter}\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n        required\n        autoComplete=\"off\"\n      />\n    </Wrapper>\n  )\n}\n\nexport default Filter\n","import React, { Component } from 'react'\nimport Phonebook from './components/Phonebook/Phonebook'\nimport Contacts from './components/Contacts/Contacts'\nimport Filter from './components/Filter/Filter'\nimport { v4 as uuidv4 } from 'uuid'\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n    name: '',\n    number: '',\n  }\n\n  handleChange = (e) => {\n    const { name, value } = e.target\n    this.setState({ [name]: value })\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault()\n    const randomId = uuidv4()\n    const checkName = this.state.contacts\n      .map((contact) => contact.name)\n      .includes(this.state.name)\n    const checkNumber = this.state.contacts\n      .map((contact) => contact.number)\n      .includes(this.state.number)\n\n    if (checkName) {\n      alert(`${this.state.name} is already in contacts`)\n    } else if (checkNumber) {\n      alert(`Number ${this.state.number} is already in contacts`)\n    } else {\n      this.setState({\n        contacts: [\n          ...this.state.contacts,\n          { id: randomId, name: this.state.name, number: this.state.number },\n        ],\n      })\n    }\n\n    this.eraseInputs()\n    console.log(this.state.contacts)\n  }\n\n  eraseInputs = () => {\n    this.setState({ name: '', number: '' })\n  }\n\n  removeContact = (contactId) => {\n    this.setState((prevState) => {\n      return {\n        contacts: prevState.contacts.filter(({ id }) => id !== contactId),\n      }\n    })\n  }\n\n  visibleContacts = () => {\n    const normalizedFilter = this.state.filter.toLowerCase()\n    return this.state.contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    )\n  }\n\n  render() {\n    const { name, number, filter } = this.state\n    return (\n      <div>\n        <Phonebook\n          onSubmit={this.handleSubmit}\n          onChange={this.handleChange}\n          name={name}\n          number={number}\n        ></Phonebook>\n        <Filter filter={filter} onChange={this.handleChange}></Filter>\n        <Contacts\n          contactsData={this.visibleContacts()}\n          onDeleteContact={this.removeContact}\n        ></Contacts>\n      </div>\n    )\n  }\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App.jsx'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}